╔══════════════════════════════════════════════════════════════════════╗
║                                                                      ║
║        📊 GRAFANA - МОНИТОРИНГ DASHBOARDS                           ║
║                                                                      ║
╚══════════════════════════════════════════════════════════════════════╝

═══════════════════════════════════════════════════════════════════════
🔗 АДРЕСА ДОСТУПА
═══════════════════════════════════════════════════════════════════════

GRAFANA:
  🌐 Production:  https://ibbase.ru:3001
  🏠 Local:       http://localhost:3001
  
  📝 Default Login:
     Username: admin
     Password: admin
     (при первом входе попросит сменить)

PROMETHEUS:
  🌐 Production:  https://ibbase.ru:9090
  🏠 Local:       http://localhost:9090
  
  📊 Metrics:     /metrics
  🎯 Targets:     /targets
  📈 Graph:       /graph

POSTGRES EXPORTER:
  🌐 Production:  https://ibbase.ru:9187
  🏠 Local:       http://localhost:9187
  
  📊 Metrics:     /metrics

═══════════════════════════════════════════════════════════════════════
📊 GRAFANA DASHBOARDS
═══════════════════════════════════════════════════════════════════════

После логина в Grafana:

1. FastAPI CRM Dashboard
   - Путь: Dashboards → Browse
   - Файл: monitoring/grafana/dashboards/fastapi-crm-dashboard.json
   
   Метрики:
   - Request Rate (req/s)
   - Response Time (ms)
   - Error Rate (%)
   - Active Users
   - Database Connections
   - OCR Processing Queue
   - Memory Usage
   - CPU Usage

2. System Metrics
   - PostgreSQL stats
   - Redis stats
   - Celery tasks
   - Docker containers

═══════════════════════════════════════════════════════════════════════
🐳 DOCKER СТАТУС
═══════════════════════════════════════════════════════════════════════

Grafana:
  Container:  bizcard-grafana
  Image:      grafana/grafana:latest
  Port:       3001:3000
  Status:     Up 4 days ✅

Prometheus:
  Container:  bizcard-prometheus
  Image:      prom/prometheus:latest
  Port:       9090:9090
  Status:     Up 4 days ✅

Postgres Exporter:
  Container:  bizcard-postgres-exporter
  Image:      prometheuscommunity/postgres-exporter:latest
  Port:       9187:9187
  Status:     Up 4 days ✅

═══════════════════════════════════════════════════════════════════════
🔧 УПРАВЛЕНИЕ
═══════════════════════════════════════════════════════════════════════

Перезапуск:
  docker restart bizcard-grafana
  docker restart bizcard-prometheus

Логи:
  docker logs bizcard-grafana
  docker logs bizcard-prometheus

Остановка:
  docker stop bizcard-grafana
  docker stop bizcard-prometheus

Запуск:
  docker start bizcard-grafana
  docker start bizcard-prometheus

═══════════════════════════════════════════════════════════════════════
📈 НАСТРОЙКА DASHBOARDS
═══════════════════════════════════════════════════════════════════════

1. Зайти в Grafana: https://ibbase.ru:3001

2. Configuration → Data Sources
   - Добавить Prometheus: http://bizcard-prometheus:9090

3. Dashboards → Import
   - Upload JSON: monitoring/grafana/dashboards/fastapi-crm-dashboard.json
   - Или Import via ID: 1860 (Node Exporter)

4. Create → Dashboard
   - Добавить свои панели
   - Настроить alerts

═══════════════════════════════════════════════════════════════════════
🎯 БЫСТРЫЙ ДОСТУП
═══════════════════════════════════════════════════════════════════════

Открыть Grafana:
  xdg-open https://ibbase.ru:3001
  # или
  firefox https://ibbase.ru:3001

Открыть Prometheus:
  xdg-open https://ibbase.ru:9090

Проверить metrics FastAPI:
  curl http://localhost:8000/metrics

═══════════════════════════════════════════════════════════════════════
📊 ДОСТУПНЫЕ МЕТРИКИ
═══════════════════════════════════════════════════════════════════════

FastAPI Metrics (http://localhost:8000/metrics):
  - http_requests_total
  - http_request_duration_seconds
  - http_requests_in_progress
  - process_cpu_seconds_total
  - process_resident_memory_bytes

PostgreSQL Metrics (http://localhost:9187/metrics):
  - pg_up
  - pg_stat_database_*
  - pg_stat_user_tables_*
  - pg_database_size_bytes

Custom Metrics:
  - ocr_processing_total
  - duplicate_detection_total
  - user_login_total
  - contact_created_total

═══════════════════════════════════════════════════════════════════════
🔐 БЕЗОПАСНОСТЬ
═══════════════════════════════════════════════════════════════════════

ВАЖНО:
⚠️  Сменить пароль admin после первого входа!
⚠️  Не открывать порты 3001, 9090, 9187 в production
⚠️  Использовать Nginx reverse proxy для доступа

Рекомендуемая настройка Nginx:

location /grafana/ {
    proxy_pass http://localhost:3001/;
    proxy_set_header Host $host;
}

location /prometheus/ {
    proxy_pass http://localhost:9090/;
    proxy_set_header Host $host;
}

═══════════════════════════════════════════════════════════════════════
📁 ФАЙЛЫ КОНФИГУРАЦИИ
═══════════════════════════════════════════════════════════════════════

Grafana:
  - Data: monitoring/grafana-data/
  - Dashboards: monitoring/grafana/dashboards/
  - Config: monitoring/grafana/grafana.ini (если есть)

Prometheus:
  - Config: monitoring/prometheus.yml
  - Data: monitoring/prometheus-data/

═══════════════════════════════════════════════════════════════════════
✅ ИТОГ
═══════════════════════════════════════════════════════════════════════

🌐 GRAFANA:      https://ibbase.ru:3001
📊 PROMETHEUS:   https://ibbase.ru:9090
🔍 METRICS:      http://localhost:8000/metrics

Статус: ✅ ВСЕ РАБОТАЕТ
Uptime: 4 дня

═══════════════════════════════════════════════════════════════════════

На русском! 🇷🇺
Happy Monitoring! 📊

═══════════════════════════════════════════════════════════════════════
