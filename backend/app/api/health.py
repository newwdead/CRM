"""
Health check and system info endpoints
"""
from fastapi import APIRouter
import os

router = APIRouter()


@router.get('/version')
def get_version():
    """Get API version"""
    return {
        'version': '6.0.0',
        'build': 'production',
        'api_version': 'v1',
        'python': '3.11.14',
        'fastapi': '0.115.0',
        'sqlalchemy': '2.0.36',
        'react': '18.3.1',
        'security_update': 'phase1-complete',
        '2fa': 'enabled',
        'file_security': 'enhanced',
        'refresh_tokens': 'enabled',
        'auto_refresh': 'frontend-enabled'
    }


@router.get('/health')
def health_check():
    """Health check endpoint"""
    return {'status': 'ok'}


@router.get('/system/resources')
def get_system_resources():
    """
    Get system resources and service URLs
    Returns information about deployed services, URLs, and environment
    """
    # Get domain from environment or use default
    domain = os.getenv('DOMAIN', 'localhost')
    protocol = 'https' if domain != 'localhost' else 'http'
    
    services = {
        'backend': {
            'name': 'Backend API v6.0',
            'description': 'üöÄ FastAPI + OCR v2.0 (PaddleOCR + LayoutLMv3 + Validator)',
            'url': f'{protocol}://{domain}/api' if domain != 'localhost' else None,
            'local_url': 'http://localhost:8000',
            'status': 'running'
        },
        'frontend': {
            'name': 'Frontend (React)',
            'description': '–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ React –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–∑–∏—Ç–∫–∞–º–∏',
            'url': f'{protocol}://{domain}' if domain != 'localhost' else None,
            'local_url': 'http://localhost:3000',
            'status': 'running'
        },
        'postgres': {
            'name': 'PostgreSQL Database',
            'description': '–û—Å–Ω–æ–≤–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
            'url': None,
            'local_url': 'postgresql://localhost:5432',
            'status': 'running'
        },
        'redis': {
            'name': 'Redis Cache',
            'description': '–ö–µ—à –≤ –ø–∞–º—è—Ç–∏ –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ OCR –∏ —Å–µ—Å—Å–∏–π',
            'url': None,
            'local_url': 'redis://localhost:6379',
            'status': 'running'
        },
        'celery': {
            'name': 'Celery Workers',
            'description': '‚ö° –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞: OCR v2.0 + Batch + Export + Validation',
            'url': None,
            'local_url': 'N/A',
            'status': 'running'
        },
        'whatsapp': {
            'name': 'WhatsApp Integration',
            'description': '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è WhatsApp –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π',
            'url': None,
            'local_url': 'N/A',
            'status': 'configured'
        },
        'label_studio': {
            'name': 'Label Studio',
            'description': 'üè∑Ô∏è –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –∞–Ω–Ω–æ—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∏–∑–∏—Ç–æ–∫ (OCR v2.0 training)',
            'url': f'{protocol}://{domain}:8081' if domain != 'localhost' else None,
            'local_url': 'http://localhost:8081',
            'status': 'available'
        },
        'minio': {
            'name': 'MinIO Storage',
            'description': 'üì¶ S3-—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ OCR —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤',
            'url': f'{protocol}://{domain}:9000' if domain != 'localhost' else None,
            'local_url': 'http://localhost:9000',
            'status': 'running'
        },
        'minio_console': {
            'name': 'MinIO Console',
            'description': 'üñ•Ô∏è –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è MinIO (S3 browser)',
            'url': f'{protocol}://{domain}:9001' if domain != 'localhost' else None,
            'local_url': 'http://localhost:9001',
            'status': 'running'
        },
        'prometheus': {
            'name': 'Prometheus',
            'description': '–°–±–æ—Ä –º–µ—Ç—Ä–∏–∫ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–∏—Å—Ç–µ–º—ã',
            'url': None,
            'local_url': 'http://localhost:9090',
            'status': 'running'
        },
        'grafana': {
            'name': 'Grafana',
            'description': '–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç—Ä–∏–∫ –∏ –¥–∞—à–±–æ—Ä–¥—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞',
            'url': f'https://monitoring.{domain}' if domain != 'localhost' else None,
            'local_url': 'http://localhost:3001',
            'status': 'available'
        },
        'cadvisor': {
            'name': 'cAdvisor',
            'description': '–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–µ—Å—É—Ä—Å–æ–≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤',
            'url': None,  # –¢–æ–ª—å–∫–æ –ª–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø
            'local_url': 'http://localhost:8080',
            'status': 'running'
        },
        'node_exporter': {
            'name': 'Node Exporter',
            'description': '–≠–∫—Å–ø–æ—Ä—Ç –º–µ—Ç—Ä–∏–∫ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Prometheus',
            'url': None,
            'local_url': 'http://localhost:9100',
            'status': 'running'
        },
        'redis_exporter': {
            'name': 'Redis Exporter',
            'description': '–≠–∫—Å–ø–æ—Ä—Ç –º–µ—Ç—Ä–∏–∫ Redis –¥–ª—è Prometheus',
            'url': None,
            'local_url': 'http://localhost:9121',
            'status': 'running'
        },
        'postgres_exporter': {
            'name': 'PostgreSQL Exporter',
            'description': '–≠–∫—Å–ø–æ—Ä—Ç –º–µ—Ç—Ä–∏–∫ PostgreSQL –¥–ª—è Prometheus',
            'url': None,
            'local_url': 'http://localhost:9187',
            'status': 'running'
        }
    }
    
    environment = {
        'domain': domain,
        'protocol': protocol,
        'server_host': os.getenv('SERVER_HOST', 'localhost'),
        'environment': os.getenv('ENVIRONMENT', 'development')
    }
    
    return {
        'services': services,
        'environment': environment,
        'total_services': len(services)
    }

