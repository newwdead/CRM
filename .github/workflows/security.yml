name: Security Scan

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run every Monday at 9:00 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

jobs:
  # Python dependency scanning
  python-security:
    name: Python Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: ./backend
        run: |
          python -m pip install --upgrade pip
          pip install safety bandit

      - name: Run Safety (dependency vulnerabilities)
        working-directory: ./backend
        continue-on-error: true
        run: |
          pip install -r requirements.txt
          safety check || echo "Safety check completed with warnings"

      - name: Run Bandit (code security)
        working-directory: ./backend
        continue-on-error: true
        run: |
          bandit -r app/ -ll || echo "Bandit scan completed with warnings"


  # Node.js dependency scanning
  npm-security:
    name: NPM Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        working-directory: ./frontend
        run: npm ci

      - name: Run npm audit
        working-directory: ./frontend
        continue-on-error: true
        run: |
          npm audit --audit-level=moderate || echo "NPM audit completed with warnings"


  # Docker image scanning
  docker-security:
    name: Docker Image Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build backend image
        run: docker build -t bizcard-backend:test ./backend

      - name: Build frontend image
        run: docker build -t bizcard-frontend:test ./frontend

      - name: Run Trivy scan on backend
        continue-on-error: true
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image --severity HIGH,CRITICAL bizcard-backend:test || echo "Trivy backend scan completed"

      - name: Run Trivy scan on frontend
        continue-on-error: true
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image --severity HIGH,CRITICAL bizcard-frontend:test || echo "Trivy frontend scan completed"

  # Security summary
  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [python-security, npm-security, docker-security]
    if: always()
    steps:
      - name: Generate security summary
        run: |
          echo "# Security Scan Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ All security scans completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Scans performed:" >> $GITHUB_STEP_SUMMARY
          echo "- 🐍 Python dependency scan (Safety)" >> $GITHUB_STEP_SUMMARY
          echo "- 🐍 Python code security (Bandit)" >> $GITHUB_STEP_SUMMARY
          echo "- 📦 NPM dependency audit" >> $GITHUB_STEP_SUMMARY
          echo "- 🐳 Docker image scan (Trivy)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Check individual jobs for detailed results." >> $GITHUB_STEP_SUMMARY
