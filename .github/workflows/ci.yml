name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

# Cancel old runs when new commits are pushed
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'  # Built-in pip caching
      
      - name: Install backend dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
      
      - name: Install linters
        run: |
          pip install flake8 black
      
      - name: Run flake8
        run: |
          cd backend
          flake8 app/ --max-line-length=120 --exclude=__pycache__,migrations --statistics
        continue-on-error: true  # Don't fail build, just warn
      
      - name: Check code formatting with black
        run: |
          cd backend
          black app/ --check --diff
        continue-on-error: true  # Don't fail build, just warn
      
      - name: Import checks
        run: |
          python - << 'PY'
          import fastapi, sqlalchemy, pandas
          print('Backend imports OK')
          PY
      
      - name: Run pytest tests
        run: |
          cd backend
          pytest app/tests/ -v --tb=short --maxfail=5
        continue-on-error: false  # Fail build if tests fail
      
      - name: Run tests with coverage
        run: |
          cd backend
          pytest app/tests/ --cov=app --cov-report=term --cov-report=xml
        continue-on-error: true  # Don't fail build, coverage is informational
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage.xml
          flags: backend
          name: backend-coverage
        continue-on-error: true  # Don't fail if codecov upload fails
      
      - name: Build backend Docker image
        uses: docker/setup-buildx-action@v3
      
      - name: Test backend Docker build
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: false
          tags: ibbase/backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install dependencies
        working-directory: frontend
        run: |
          npm install
      
      - name: Run ESLint
        working-directory: frontend
        run: |
          npm run lint || echo "ESLint not configured, skipping..."
        continue-on-error: true
      
      - name: Build frontend
        working-directory: frontend
        run: npm run build
      
      - name: Build frontend Docker image
        uses: docker/setup-buildx-action@v3
      
      - name: Test frontend Docker build
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: false
          tags: ibbase/frontend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build/
          retention-days: 7

  docker-compose:
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Validate docker-compose.yml
        run: |
          docker compose config > /dev/null
          echo "docker-compose.yml is valid"
