services:
  db:
    image: postgres:15
    container_name: bizcard-db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-bizcard_crm}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:?POSTGRES_PASSWORD must be set in .env file}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"

  redis:
    image: redis:7-alpine
    container_name: bizcard-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  backend:
    build: ./backend
    container_name: bizcard-backend
    environment:
      - TZ=Europe/Berlin
      - APP_VERSION=v2.14
      - APP_MESSAGE=Modular Architecture Completion
      - SERVER_HOST=ibbase.ru
      - DOMAIN=ibbase.ru
      - USE_HTTPS=true
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-bizcard_crm}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - PARSIO_API_URL=${PARSIO_API_URL:-}
      - PARSIO_API_KEY=${PARSIO_API_KEY:-}
      - PARSIO_AUTH_HEADER_NAME=${PARSIO_AUTH_HEADER_NAME:-Authorization}
      - PARSIO_AUTH_HEADER_VALUE=${PARSIO_AUTH_HEADER_VALUE:-Bearer {key}}
      - PARSIO_TIMEOUT=${PARSIO_TIMEOUT:-30}
      - WHATSAPP_API_URL=${WHATSAPP_API_URL:-https://graph.facebook.com/v18.0}
      - WHATSAPP_PHONE_ID=${WHATSAPP_PHONE_ID:-}
      - WHATSAPP_ACCESS_TOKEN=${WHATSAPP_ACCESS_TOKEN:-}
      - WHATSAPP_VERIFY_TOKEN=${WHATSAPP_VERIFY_TOKEN:?WHATSAPP_VERIFY_TOKEN must be set in .env file}
    volumes:
      - ./backend/app:/app/app
      - ./uploads:/app/uploads
      - ./backups:/home/ubuntu/fastapi-bizcard-crm-ready/backups
      - ./scripts:/home/ubuntu/fastapi-bizcard-crm-ready/scripts:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - .:/home/ubuntu/fastapi-bizcard-crm-ready:ro
    ports:
      - '127.0.0.1:8000:8000'
    depends_on:
      - db
      - redis

  celery-worker:
    build: ./backend
    container_name: bizcard-celery-worker
    command: celery -A app.celery_app worker --loglevel=info --concurrency=2
    environment:
      - TZ=Europe/Berlin
      - C_FORCE_ROOT=true
      - DATABASE_URL=postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB:-bizcard_crm}
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - PARSIO_API_URL=${PARSIO_API_URL:-}
      - PARSIO_API_KEY=${PARSIO_API_KEY:-}
      - PARSIO_AUTH_HEADER_NAME=${PARSIO_AUTH_HEADER_NAME:-Authorization}
      - PARSIO_AUTH_HEADER_VALUE=${PARSIO_AUTH_HEADER_VALUE:-Bearer {key}}
      - PARSIO_TIMEOUT=${PARSIO_TIMEOUT:-30}
      - WHATSAPP_API_URL=${WHATSAPP_API_URL:-https://graph.facebook.com/v18.0}
      - WHATSAPP_PHONE_ID=${WHATSAPP_PHONE_ID:-}
      - WHATSAPP_ACCESS_TOKEN=${WHATSAPP_ACCESS_TOKEN:-}
      - WHATSAPP_VERIFY_TOKEN=${WHATSAPP_VERIFY_TOKEN:?WHATSAPP_VERIFY_TOKEN must be set in .env file}
    volumes:
      - ./backend/app:/app/app
      - ./uploads:/app/uploads
    depends_on:
      - db
      - redis
    restart: unless-stopped

  frontend:
    build: ./frontend
    container_name: bizcard-frontend
    depends_on:
      - backend
    ports:
      - '127.0.0.1:3000:80'

  label-studio:
    image: heartexlabs/label-studio:latest
    container_name: bizcard-label-studio
    environment:
      - LABEL_STUDIO_HOST=http://localhost:8081
      - LABEL_STUDIO_USERNAME=${LABEL_STUDIO_USERNAME:-admin@ibbase.ru}
      - LABEL_STUDIO_PASSWORD=${LABEL_STUDIO_PASSWORD:?LABEL_STUDIO_PASSWORD must be set in .env file}
      - LABEL_STUDIO_USER_TOKEN=${LABEL_STUDIO_TOKEN:-}
      - LABEL_STUDIO_LOCAL_FILES_SERVING_ENABLED=true
      - LABEL_STUDIO_LOCAL_FILES_DOCUMENT_ROOT=/label-studio/files
    volumes:
      - label_studio_data:/label-studio/data
      - ./uploads:/label-studio/files:ro  # Read-only access to business card images
    ports:
      - '127.0.0.1:8081:8080'
    restart: unless-stopped
    command: label-studio start --init

volumes:
  postgres_data:
  redis_data:
  label_studio_data:
